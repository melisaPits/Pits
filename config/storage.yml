test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
#amazon:
#  service: S3
#  access_key_id: <%= ENV['BUCKETEER_AWS_ACCESS_KEY_ID'] %>
#  secret_access_key: <%= ENV['BUCKETEER_AWS_SECRET_ACCESS_KEY'] %>
#  region: <%= ENV['BUCKETEER_AWS_REGION'] %>
#  bucket: <%= ENV['BUCKETEER_BUCKET_NAME'] %>

# Remember not to checkin your GCS keyfile to a repository
google:
  service: GCS
  credentials:
    type: "service_account"
    project_id: "pitsimagen"
    private_key_id: "<%= ENV["GOOGLE_PRIVATE_KEY_ID"] %>"
    private_key: "<%= ENV["GOOGLE_PRIVATE_KEY"].lines.join("\\n") %>"
    client_email: "<%= ENV["GOOGLE_CLIENT_EMAIL"] %>"
    client_id: "<%= ENV["GOOGLE_CLIENT_ID"] %>"
    auth_uri: "https://accounts.google.com/o/oauth2/auth"
    token_uri: "https://oauth2.googleapis.com/token"
    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
    client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/pitsmaster%40pitsimagen.iam.gserviceaccount.com"
  project: "pitsimagen"
  bucket: "pits_images"

#   project: your_project
#   credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
#   bucket: your_own_bucket

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
